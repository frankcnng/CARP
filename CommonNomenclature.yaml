
openapi: 3.0.3
info:
  title: Common Nomenclature under Article 6.2 of the Paris Agreement
  version: 0.0.1
  description: |
     This API allows accessing common list of values for specific information attributes required for the reporting of annual information, in accordance with decision 2/CMA.3, annex, chapter IV.B and decision 6/CMA.4, annex I, chapter II.B
  contact: 
    name: UNFCCC secretariat (Centralized Accounting and Reporting Platform â€“ CARP)
    email: CARP-support@unfccc.int
    url: https://unfccc.int/process-and-meetings/the-paris-agreement/cooperative-implementation/carp
  license: 
    name: N/A
    url: N/A
  x-audience: external-public
  x-api-id: unused-for-this-api-0
servers:
  - url: https://...unfccc.int
    description: Production server (uses live data !)
  - url: https://...unfccc.int:8443
    description: Test server (uses test data)
tags:
  - name: accountType
    description: Manage the accountType description
  - name: participatingParty
    description: Manage the participatingParty description
  - name: transactionType
    description: Manage the transactionType description
  - name: unitType
    description: Manage the unitType description
  
paths:
  /account-type:
    get:
      tags:
        - accountType
      operationId: getAccountType
      description: |
        Returns the valid values for Account Type
        from the Common Nomenclature under Article 6.2 of the Paris Agreement
        
        * 1 - Issuance
        * 10 - Internal transfer
        * 3 - External transfer
        * 4 - Cancellation
        * 5 - "Use towards NDC - Referred to as Retirement"
        * 7 - "Change of authorisation - Referred to as Carry-over"
      summary: Valid values for Account Type
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/accountType'
        '400':
          description: Unsuccessful operation
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorOrWarningResponse'
  
  /participating-party:
    get:
      tags:
        - participatingParty
      operationId: getParticipatingParty
      description: |
        Returns the valid values for Participating Party
        from the Common Nomenclature under Article 6.2 of the Paris Agreement
        
        ISO-3166 3 letter code of the country
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/participatingParty'
        '400':
          description: Unsuccessful operation
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorOrWarningResponse'

  /transaction-type:
    get:
      tags:
        - transactionType
      operationId: getTransactionType
      description: |
        Returns the valid values for Transaction Type
        from the Common Nomenclature under Article 6.2 of the Paris Agreement
        
        See also suppTransactionType regarding first transfers.
        * 1 - Issuance
        * 10 - Internal transfer
        * 3 - External transfer
        * 4 - Cancellation
        * 5 - "Use towards NDC - Referred to as Retirement"
        * 7 - "Change of authorisation - Referred to as Carry-over"
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/transactionType'
        '400':
          description: Unsuccessful operation
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorOrWarningResponse'

  /valid-unit-types:
    get:
      tags:
        - unitType
      operationId: validUnitTypes
      description: |
        Allows, as a parameter, a valid for Unit Type
        from the Common Nomenclature under Article 6.2 of the Paris Agreement
        
        * 62 - ITMO
        * 64 - A6.4ER
        * 65 - A6.4ER from CER
        * 67 - MCU
      parameters:
        - name: value
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/unitType'
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unitType'
        '400':
          description: Unsuccessful operation
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ErrorOrWarningResponse'

components:
  schemas:
    accountType:
      description: |
        Account types under Article 6.
        * 100 - Holding account.  Must be used as a destination of issuance(s),
                  or as a source or destination of internal or external transfer,
                  or as a source of cancellations or use
        * 110 - Pending account
        * 120 - Operator holding account
        * 121 - Person holding account
        * 230 - Voluntary cancellation account
        * 250 - Mandatory cancellation account for OMGE
        * 280 - Voluntary cancellation account for OMGE
        * 270 - Use towards other purposes account
        * 300 - Use towards NDC account
      type: integer
      x-extensible-enum:
        - 100
        - 110
        - 120
        - 121
        - 230
        - 250
        - 280
        - 270
        - 300
    participatingParty:
      description: ISO-3166 3 letter code of the country
      type: string
    transactionType:
      description: |
        Transaction types under Article 6.  See also suppTransactionType regarding first transfers.
        See also suppTransactionType regarding first transfers.
        * 1 - Issuance
        * 10 - Internal transfer
        * 3 - External transfer
        * 4 - Cancellation
        * 5 - "Use towards NDC - Referred to as Retirement"
        * 7 - "Change of authorisation - Referred to as Carry-over"
      type: integer
      x-extensible-enumenum:
        - 1
        - 10
        - 3
        - 4
        - 5
        - 7
    unitType:
      description: |
        Unit types under Article 6.
        * 62 - ITMO
        * 64 - A6.4ER
        * 65 - A6.4ER from CER
        * 67 - MCU
      type: integer
      x-extensible-enum:
        - 62
        - 64
        - 65
        - 67
  
    ErrorOrWarningResponse: # Problem JSON / RFC 7XXX compatible error. See https://opensource.zalando.com/restful-api-guidelines/models/problem-1.0.1.yaml
      type: object
      properties:
        type:
          type: string
          format: uri
          description: |
            An absolute URI that identifies the problem type.  When dereferenced,
            it SHOULD provide human-readable documentation for the problem type
            (e.g., using HTML).
          default: 'about:blank'
          example: 'https://zalando.github.io/problem/constraint-violation'
        title:
          type: string
          description: |
            A short, summary of the problem type. Written in english and readable
            for engineers (usually not suited for non technical stakeholders and
            not localized); example: Service Unavailable
        status:
          type: integer
          format: int32
          description: |
            The HTTP status code generated by the origin server for this occurrence
            of the problem.
          minimum: 100
          maximum: 600
          exclusiveMaximum: true
          example: 503
        detail:
          type: string
          description: |
            A human readable explanation specific to this occurrence of the
            problem.
          example: Connection to database timed out
        instance:
          type: string
          format: uri
          description: |
            An absolute URI that identifies the specific occurrence of the problem.
            It may or may not yield further information if dereferenced.

  securitySchemes:

    basicAuth:
      type: http  #TBD: Open API 3.1 supports mutualTLS
      scheme: basic
      x-registry-secret:
        type: string

security:
  - basicAuth: []
  
