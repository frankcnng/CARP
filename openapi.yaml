openapi: 3.0.3
info:
  version: 0.0.1
  title: >-
    API for the Centralized Accounting and Reporting Platform (CARP) (Work In
    Progress)
  description: >-
    <b>Introduction</b>
    <br><br>The Centralized Accounting and Reporting
    Platform (CARP) supports and facilitates the submission of reports and the
    publication of non-confidential information according to decision 2/CMA.3,
    annex, chapter IV (Reporting).
    <br><br><b>Current status</b>     
    <br><br>This API is currently in development.
  contact: 
    name: UNFCCC secretariat (Centralized Accounting and Reporting Platform (CARP)
    email: CARP-support@unfccc.int
    url: https://unfccc.int/process-and-meetings/the-paris-agreement/cooperative-implementation/carp
  license: 
    name: License not applicable
    url: N/A
  x-audience: external-public
  x-api-id: unused-for-this-api-0
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/none-db2/CARP/0.0.1
  - url: TBD
    description: Production server (uses live data !)
  - url: TBD
    description: Test server (uses test data)
tags:
  - name: All
    description: All operations
  - name: Submission
    description: Submission operations
  - name: Authorization
    description: Authorization operations
  - name: CooperationApproach
    description: Cooperative Approach operations
paths:
  /serverStatus:
    get:
      tags:
        - All
      operationId: getServerStatus
      summary: Get the current server status and date/time
      description: Get the current server status and date/time
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  status:
                    type: string
                    enum: [Operational, Non-Operational]
                    description: >
                      The operational status of the server:<br>
                      * Operational: all operations are allowed<br>
                      * Non-Operational: no operations are allowed<br>
                    example: Operational
                  timestamp:
                    type: string
                    format: date-time
                    minLength: 20
                    maxLength: 20
                    description: Date/time as defined in RFC 3339, section 5.6
                    example: 2027-07-21T17:32:28Z
              example:
                status: Non-Operational
                timestamp: 2026-07-21T17:32:28Z
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'

  /submission/submitInitialReport:
    post:
      tags:
        - Submission
      operationId: submitInitialReport
      summary: Submit an Initial Report
      description: Submit an Initial Report
      requestBody:
        description: the document submitted
        required: true
        content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: integer
        '400':
          description: Unsuccessful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'

  /submission/submitUpdatedInitialReport:
    post:
      tags:
        - Submission
      operationId: submitUpdatedInitialReport
      summary: Submit an Updated Initial Report
      description: Submit an Updated Initial Report
      requestBody:
        description: the document submitted
        required: true
        content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: integer
        '400':
          description: Unsuccessful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'

  /submission/submitAnnualInformation:
    post:
      tags:
        - Submission
      operationId: submitAnnualInformation
      summary: Submit Annual Information in AEF
      description: Submit Annual Information in AEF
      requestBody:
        description: the document submitted
        required: true
        content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: integer
        '400':
          description: Unsuccessful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'

  /submission/submitRegularInformation:
    post:
      tags:
        - Submission
      operationId: submitRegularInformation
      summary: Submit Regular Information
      description: Submit Regular Information
      requestBody:
        description: the document submitted
        required: true
        content:
            application/octet-stream:
              schema:
                type: string
                format: binary
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: integer
        '400':
          description: Unsuccessful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'

  /authorization/registerCooperativeApproachAuth:
    post:
      tags:
        - Authorization
      operationId: registerCooperativeApproachAuth
      summary: Register authorised cooperative approach,<br>
        from the registry identified by regId.
      description: Register authorised cooperative approach, from the registry identified by regId.<br>
        This will be performed by the secretariat when it registers the CA authorisation with the CARP.<br>
        This enables the CAs and ITMOs for interoperability.<br>
        This will create the CooperativeApproachAuthorization and the CooperativeApproach within the International Registry.
      requestBody:
        description: The cooperative approach authorisation to be registered.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CooperativeApproachAuthorization'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: integer
        '400':
          description: Unsuccessful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'

  /authorization/registerITMOAuth:
    post:
      tags:
        - Authorization
      operationId: registerITMOAuth
      summary: Register the authorisation of ITMOs from the registry identified by regId.
      description: Register authorised ITMOs, from the registry identified by regId.<br>
        This enables ITMOs for interoperability by to be issued via a Issuance Action Proposal from the registry.<br>
        Note that this operation does not create ITMOs, in creates an ITMO Authorization,<br>
        containing an authorized C02 quantity, a cooperative approach id, and an authorization id.<br>
        When the ITMOs are subsequently issued by the registry, it must be consistent with this information.<br>
        If the ITMO's cooperative approach id is not found, or is not yet authorised, the operation fails.
      requestBody:
        description: The ITMOs to be registered.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ITMOAuthorization'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: integer
        '400':
          description: Unsuccessful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'

  /authorization/{authId}:
    get:
      tags:
        - Authorization
      operationId: getAuthorization
      summary: Retrieve authorization with identifier authId, registered to the registry identified by regId.
      description: Retrieve authorization with identifier authId, registered to the registry identified by regId.<br>
        Depending on what was authorised, different properties in the response will be populated.
      parameters:
        - name: authId
          in: path
          description: The id of the authorisation to be retrieved.
          required: true
          schema:
            type: string
            example: "GUY 2024-CA1"
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  caAuths:
                    $ref: '#/components/schemas/CooperativeApproachAuthorization'
                  itmoAuths:
                    $ref: '#/components/schemas/ITMOAuthorization'
                  entityAuths:
                    $ref: '#/components/schemas/EntityAuthorization'
        '400':
          description: Unsuccessful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'

    post:
      tags:
        - Authorization
      operationId: updateAuthorization
      summary: Update an authorization,<br>
        from the registry identified by regId.
      description: Update an authorization, identified by authId,<br>
        from the registry identified by regId.
      parameters:
        - name: authId
          in: path
          description: The id of the authorisation to be retrieved.
          required: true
          schema:
            type: string
            example: "GUY 2024-CA1"
      requestBody:
        description: The cooperative approach authorisation to be registered.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                caAuths:
                  $ref: '#/components/schemas/CooperativeApproachAuthorization'
                itmoAuths:
                  $ref: '#/components/schemas/ITMOAuthorization'
                entityAuths:
                  $ref: '#/components/schemas/EntityAuthorization'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: integer
        '400':
          description: Unsuccessful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'

  /authorizations/:
    get:
      tags:
        - Authorization
      operationId: getAuthorizations
      summary: Retrieve all authorizations registered to the registry identified by regId.
      description: Retrieve all authorizations registered to the registry identified by regId.<br>
        This includes cooperative approach authorizations, ITMO authorizations, and entity authorizations.
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  caAuths:
                    type: array
                    maxItems: 5000
                    items:
                      $ref: '#/components/schemas/CooperativeApproachAuthorization'
                  itmoAuths:
                    type: array
                    maxItems: 5000
                    items:
                      $ref: '#/components/schemas/ITMOAuthorization'
                  entityAuths:
                    type: array
                    maxItems: 5000
                    items:
                      $ref: '#/components/schemas/EntityAuthorization'
        '400':
          description: Unsuccessful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'

  /cooperativeApproach/{caId}:
    get:
      tags:
        - CooperativeApproach
      operationId: getCooperativeApproach
      summary: Retrieve cooperative approach with identifier caId, registered to the registry identified by regId.
      description: Retrieve cooperative approach with identifier caId, registered to the registry identified by regId.<br>
      parameters:
        - name: caId
          in: path
          description: The id of the cooperative approach be retrieved.
          required: true
          schema:
            type: string
            example: "CA0002"
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CooperativeApproach'
        '400':
          description: Unsuccessful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'

    post:
      tags:
        - CooperativeApproach
      operationId: updateCooperativeApproach
      summary: Update cooperative approach identified by caId,<br>
        from the registry identified by regId.
      description: Update cooperative approach identified by caId,<br>
        from the registry identified by regId,<br>
        with attributes from the cooperative approach in the requestBody.<br>
      parameters:
        - name: caId
          in: path
          description: The id of the cooperative approach be updated.
          required: true
          schema:
            type: string
            example: "CA0002"
      requestBody:
        description: The cooperative approach authorisation to be registered.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CooperativeApproach'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: integer
        '400':
          description: Unsuccessful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'

  /cooperativeApproaches/:
    get:
      tags:
        - CooperativeApproach
      operationId: getCooperativeApproaches
      summary: Retrieve all cooperative approaches registered to the registry identified by regId.
      description: Retrieve all cooperative approaches registered to the registry identified by regId.<br>
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  cooperativeApproaches:
                    type: array
                    maxItems: 5000
                    items:
                      $ref: '#/components/schemas/CooperativeApproach'
        '400':
          description: Unsuccessful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'

components:
  schemas:

    RegistryId:
      type: string
      pattern: '^[A-Z]{3}\d{2}$'
      description: Identifier a participating Party registry.<br><br>
        Consisting of the ISO-3166-1 alpha-3 code of the participating Party as per common nomenclatures,<br><br>
        and two digit registry serial number.
      example: "DEU00"

    Authorization:
      type: object
      description: Abstract superclass for authorisations
      required:
        - authorizingPartyId
        - authorisationId
        - authorisationDate
        - version
        - lastChangeDate
        - startDate
        - endDate
        - isAuthorizationForCA
        - isAuthorizationForITMOs
        - isAuthorizationForEntities
      properties:
        authorizingPartyId:
          description: ISO-3166-1 alpha-3 code of the participating Party reporting this authorization,<br>
            as per common nomenclatures.
          type: string
          example: "BEL"
        authorisationId:
          description: Authorization Id as assigned by the participating Party reporting the authorisation.
          type: string
          example: "GUY 2024-CA1"
        authorisationDate:
          description: Datestamp of the authorisation of the cooperative approach.
            A cooperative approach may be authorised multiple times.  Only the latest is valid.
          type: string
          format: date
          example: "2024-07-21"
        version:
          description: Version of the authorisation of the cooperative approach.  The latest version is valid.
          type: string
          example: "1.0"
        lastChangeDate:
          description: Date of last change to the authorization.
          type: string
          format: date
          example: "2024-07-21"
        startDate:
          description: start date of the authorization.
          type: string
          format: date
          example: "2024-07-21"
        endDate:
          description: end date of the authorization.
          type: string
          format: date
          example: "2026-07-21"
        isAuthorizationForCA:
          description: Is this authorization for a cooperative approach
          type: boolean
        isAuthorizationForITMOs:
          description: Is this authorization for ITMOs
          type: boolean
        isAuthorizationForEntities:
          description: Is this authorization for a entities
          type: boolean
        NDCStartDate:
          description: start date of NDC period of the issuing Party.
          type: string
          format: date
          example: "2024-07-21"
        NDCEndDate:
          description: end date of the NDC period of the issuing Party.
          type: string
          format: date
          example: "2026-07-21"
        possibleChanges:
          description: Where changes to the authorizaton may occur,<br><br>
            information on the circumstances in which such changes may occur,<br><br>
            and a desciption of the process for managing them<br><br>
            in a way that avoids double counting.
          type: array
          items:
            description: A possible change, and the management process.
            type: string
            example: "a possible change"
        actualChanges:
          description: Where changes to the authorizaton have occurred,<br><br>
            a description of the curcumstances in which the change occurred,<br><br>
            and and how the changes follow the process for managing them<br><br>
            in a way that avoids double counting.
          type: array
          items:
            description: A occurred change, and the followed management process.
            type: string
            example: ""
        changeDelta:
          description: Where changes to the authorizaton have occurred,<br><br>
            a description of the specific change in respect,<br><br>
            to the earlier version of the authorization.
          type: array
          items:
            description: What has changed.
            type: string
            example: "the difference"
        termsAndConditions:
          description: optionally provided terms and conditions for this authorisation
          type: array
          items:
            type: string
        additionalInfo:
          description: Any additional information the Party submitted with the authorisation.
          type: array
          items:
            type: string
            maxLength:  255
      additionalProperties: false

    CooperativeApproachAuthorization:
      type: object
      required:
        - authorization
        - cooperativeApproachAuthorized
      properties:
        authorization:
          $ref: '#/components/schemas/Authorization'
        cooperativeApproachAuthorized:
           $ref: '#/components/schemas/CooperativeApproach'
      additionalProperties: false

    ITMOAuthorization:
      type: object
      required:
        - authorization
        - cooperativeApproachId
        - purposeForAuthorization
        - quantityCO2
        - vintages
      properties:
        authorization:
          $ref: '#/components/schemas/Authorization'
        cooperativeApproachId:
          description: Cooperative approaches under Article 6.2.<br><br>
            The format of the string is \"CANNNN\" where the \"CA\" is the fixed prefix, and NNNN is a four-digit integer,<br><br>
            that shall be incremented by one for each additional agreed cooperative approach, and added to this common nomenclature.
          type: string
          example: "CA0002"
        purposeForAuthorization:
          description: Purpose for authorisation as described by Decision 6/CMA.4 para 17 (j)<br><br>
            Refer to common nomenclatures for code lookup.
          type: integer
          minimum: 1
          maximum: 7
          example: 1
        OIMPsAuthorized:
          description: Only applicable if the authorization is for OIMP.<br><br>
            This field specifies the other international mitigation purpose (OIMP) authorised for this cooperative approaches
          type: array
          items:
            type: string
        quantityCO2:
          description: Quantity of ITMOs in metric tons of CO2 equivalent.
          type: integer
          format: int32
          minimum: 1
          maximum: 999999999
          example: 7144362
        vintages:
          description: Years in which mitigation outcomes occured as covered by the authorisation
          type: array
          items:
            type: integer
            minimum: 2021
            maximum: 9999
            example: 2025
        authorizationRegistryId:
          description: The registry the participating Party has access to, for tracking and reccording ITMOs.
          #ref: "#/components/schemas/RegistryId"
        underlyingCooperativeApproaches:
          description: Details, including registries and frameworks used by the ITMOs.
          type: array
          items:
            description: Relevant registries in any underlying regulations, frameworks, standards, or procedures.
            #ref: "#/components/schemas/UnderlyingCooperativeApproach"
      additionalProperties: false

    UnderlyingCooperativeApproach:
      type: object
      required:
        - registryId
        - approachName
      properties:
        registryId:
          description: The identifier of the relavant registry in a underlying approach
          #ref: "#/components/schemas/RegistryId"
        approachName:
          description: Name of the underlying regulation, framework, standard, or procedure<br>
            under which the relevant registry operates.
      additionalProperties: false

    EntityAuthorization:
      type: object
      required:
        - authorization
        - cooperativeApproachId
        - authorisedEntityIds
      properties:
        authorization:
          $ref: '#/components/schemas/Authorization'
        cooperativeApproachId:
          description: the cooperativeApproach for which these entities are authorised.
          type: string
          example: "CA0002"
        authorisedEntityIds:
          description: Unique identifier of entities that are authorised as per common nomenclatures, if applicable.<br><br>
            These entities are added to the cooperative approach's list of authorised entities.
          type: array
          items:
            type: string
      additionalProperties: false

    CooperativeApproach:
      type: object
      required:
        - cooperativeApproachId
        - authorisationId
        - otherParticipatingParties
        - startDate
        - endDate
        - metric
        - sectors
        - mitigationTypes
        - activityTypes
      properties:
        cooperativeApproachId:
          description: Cooperative approaches under Article 6.2.<br><br>
            The format of the string is \"CANNNN\" where the \"CA\" is the fixed prefix, and NNNN is a four-digit integer,<br><br>
            that shall be incremented by one for each additional agreed cooperative approach, and added to this common nomenclature.
          type: string
          example: "CA0002"
        authorisationId:
          description: Authorization Id as assigned by the Party authorizing this cooperative approach.
          type: string
          example: "GUY 2024-CA1"
        otherParticipatingParties:
          description: Identifiers of other participating Parties covered by authorization of cooperative approach.
          type: array
          items:
            description: ISO-3166-1 alpha-3 code of the participating Party as per common nomenclatures.
            type: string
            example: "BEL"
        startDate:
          description: start date of the cooperative approach.
          type: string
          format: date
          example: "2024-07-21"
        endDate:
          description: end date of the cooperative approach.
          type: string
          format: date
          example: "2026-07-21"
        firstTransferForOIMP:
          description: Only for authorisations for use toward OIMP.<br><br>
            Specifies the first transfer definition used by the Pary pursuant to decision 2/CMA.3, annex, para. 2(b).<br><br>
            Refer to common nomenclatures for code lookup.
          type: integer
          minimum: 2
          maximum: 4
          example: 2          
        metric:
          description: The metric used to measure the ITMO.<br><br>
            As defined per common nomenclature - recognised values are \"GHG\" and \"non-GHG\".
          type: string
          example: "GHG"
        nonGHGMetrics:
          description: The nonGHG metrics used by this cooperative approach
          type: array
          items:
            $ref: '#/components/schemas/NonGHGMetric'
        sectors:
          description: One or more sectors where the mitigation outcome will occur as per common nomenclatures based on IPCC guidelines.<br><br>
            Refer to common nomenclature for recognised values for \"sectors\".
          type: array
          items:
            type: string
        mitigationTypes:
          description: The mitigation type(s) covered by the cooperative approach.<br><br>
            Refer to common nomenclatures for recognised values for  \"mitigationTypes\".
          type: integer
          example: 1
        activityTypes:
          description: The mitigation activity type(s) from which the ITMOs were generated.<br><br>
            Refer to common nomenclature for recognised values for \"activityTypes\".
          type: array
          items:
            type: integer
            example: 1
        activities:
          description: More information of the activities
          type: array
          items:
             $ref: '#/components/schemas/ActivityRef'
        authorisedEntityIds:
          description: Unique identifier of entities that are authorised as per common nomenclatures,<br><br>
            for this cooperative approach, if applicable.
          type: array
          items:
            type: string
        mitigationOutcomeDocHashes:
          description: (required by Decision 6/CMA.4, annex I, para.4). ITMOs must be traceable to their mitigation outcomes.<br><br>
            This array contains the SHA256 hashes of all mitigation outcome documents for this cooperativeApproach.<br><br>
            The UNFCCC will store all MO documents, and provide an API getMitigationOutcomeDoc(cooperativeApproachId, sha256)
            that will return the URL of the MO document corresponding to the hash.
          type: array
          minItems: 1
          items:
            description: SHA256 hash of a single mitigation outcome document
            type: string
            example: "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855"
        otherReferences:
          description: Identification of, or coress-reference to, underlying regulations,<br><br>
            frameworks, standards, or procedures,<br><br>
            including any specific methodologies underpinning the cooperative approach.
          type: array
          items:
            type: string
            example: ""
      additionalProperties: false

    NonGHGMetric:
      type: object
      required:
        - metric
        - conversion
        - gwpValues
      properties:
        metric:
          description: The non-GHG metric name
          type: string
          example: "megawatt hours of renewable electricity generation"
        conversion:
          description: the conversion factor to convert the metric to 1 metric tonne of C02.
          type: number
          format: double
          example: 0.39
        gwpValues:
          description: If the mitigation outcome involves a non-CO2 greenhouse gas(es),<br><br>
            the global warming potential (GWP) value(s) applied,<br><br>
            consistent with the relevant CMA decisions (e.g.,\'100-year values from 5th assessment report by the IPCC\').
          type: string
      additionalProperties: false

    ActivityRef:
      type: object
      required:
        - activityName
      properties:
        activityId:
          description: the identifier of the activity, if it has one
          type: string
          example: ""
        activityName:
          description: the name of the activity
          type: string
          example: ""
      additionalProperties: false

    Errors:
      type: object
      properties:
        errors:
          type: array
          maxItems: 100
          items:
            type: object
            properties:
              severity:
                type: string
                enum: [ERROR, WARNING]
                example: ERROR
              code:
                type: integer
                format: int32
                example: 5678
              message:
                type: string
                maxLength: 1024
                example: "Unexpected error"
      additionalProperties: false

  securitySchemes:

    basicAuth:
      type: http  #TBD: Open API 3.1 supports mutualTLS
      scheme: basic
      x-registry-secret:
        type: string

security:
  - basicAuth: []
