@startuml

title ITMO Lifecycle \n

start

partition ITMOs do not yet exist in International Registry {
    
    :Cooperative Approach Authorized;
      note left
        decision 2 CMA.3, annex, para 18(g)
        * participating Party authorizes Cooperative Approach
      end note
  
    :Party registers
    Cooperative Approach authorization
    with Secretariat;
      note left
        decision 2 CMA.3, annex, para 18
        * Party submits initial report to register authorization
        * One or more combinations of authorizations of
            Coooperative Approach,
            ITMOs relating to the Cooperative Approach, and
            Entities (participating Parties?)
      end note
  
    :Secretariat (issuing authority)
    assigns Authorization ID.
    Secretariat registers Cooperative Approach
    in CARP and Common Nomenclatures;
      note left
        * Authorization ID must be assigned
            by secretariat to ensure uniqueness
        * Secretariat will also register 
            authorized objects in International Registry
      end note
    
    :Party registers 
    ITMO(s) authorization
    with Secretariat;
    
    note left
        * If not already registered with 
          Cooperative Approach authorization 
          registration
    end note
  
    if (Party opts for Interoperability) then (yes)
  
      :Party registry
      registers ITMOs
      with International Registry;
        note left
        * Use //registerITMO// API
        * Registry must provide account ID for ITMO(s)
          * If account does not exists, it will be created
        * ITMOs will be created in the International Registry
        * unique ITMOID will be returned to registry
          * registryID-serialFirst-serialLast
        end note
      
    else (no)
      stop
    
  endif
}

partition ITMOs exist in International Registry {
    
  while () is (Other ITMO operations)
  
    :Other operations on ITMOs;
      note left
      * Other operations on ITMOs
          such as internal/external transfer, update, ...
      end note
    
  endwhile (Use or Cancel ITMOs)
    :Use or Cancel ITMOs;
    stop

    
}

@enduml
